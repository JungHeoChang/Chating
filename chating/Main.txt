private static extern int GetPrivateProfileString(string, string, string, StringBuilder, int, string);
ini 파일 읽기

public Main(login _log)
login 폼 제어

public Main(Setting _setting)
Setting 폼 제어

public void Screen_Fix()
모니터 해상도에 따른 폼 크기 설정

private void Main_Load(object sender, EventArgs e)
로그인이후 Main 폼이 로드될때 실행
트레이 아이콘 설정 및 ini 파일에 설정되어 있는 정보를 바탕으로 설정창 조정

private void Input_text_Key_Up(object sender, KeyEventArgs e)
사용자의 편의성을 위해 컨트롤 + 엔터를 누를 경우 줄 바꿈의 효과와 더불어 메세지를 쓰는 창의
크기가 늘어나며 메세지를 보낼 경우 초기화

public void TCP()
서버와 통신 연결

public static string ID_Send
사용자가 로그인(login 폼)시 썼던 아이디 가져오기

void Thread(Socket)
메세지 보내기와 받기를 쓰레드로 동시에 실행

string Send_count(string, int)
c언어의 통신때 read는 정해진 길이의 정보를 받기 때문에 c와 c# 통신때 정해진 최대 길이를 정해놓고
글자수가 몇개인지 보낸다. 만약 10 글자라면 10글자 이후에는 공백을 처리
예) 010Hi 난 홍길동이야

int CharToInt(char)
char형의 숫자를 int형으로 바꾼다.

string Read_count(string)
앞의 3개의 숫자를 보고 몇 개의 문자를 읽을지 판단.

void Send_Function(Socket)
메세지 상태를 TRUE로 변경하고 서버로 메세지 상태와 아이디, 메세지를 보낸다.
엔터키 누름과 보내기 버튼을 구별하여 송신할때 크기를 조정
만약 보내기가 아닐 경우 메세지 상태는 계속해서 FLASE로 지정해서 아무일도 하지않진만 통신을 지속한다.
메세지를 계속 기다림 상태로 있을 경우 CPU를 과다하게 사용하기 때문이다.

void Recv_Function(Socket)
서버로부터 메세지를 받아 창에 띄어주며 다른 사용자의 상태(입장, 퇴장)등을 알려준다.

private static DateTime Delay(int MS)
원하는 시간만큼 지연시킨다.

public void Exit(Socket)
사용자가 종료할 경우 서버에 종료 메세지를 보낸다.

public void Current_User(Socket)
현재 사용자를 폼에 띄워 알려준다.

public int Current_user_count(Socket)
현재 사용자 인원을 구한다.

private void Exit_Click(object sender, EventArgs e)
나가기 버튼을 클릭시 설정에 따라 트레이 상태로 전환 
혹은 프로그램 종료와 Main 폼을 종료하고 login 폼으로 전환한다.

private void Send_box_Click(object sender, EventArgs e)
보내기 버튼 클릭시 메세지 창 크기 초기화

private void Main_FormClosing(object sender, FormClosingEventArgs e)
x버튼으로 나갈 시 나가기 버튼과 동일한 효과 부여

private void Input_text_TextChanged(object sender, EventArgs e)
사용자가 메세지의 최대 길이에 도달했음을 알 수 있게 최대 길이에 도달하면 더 이상 글자 입력이
되지 않는다.

public void Check_Update(Socket)
현재 사용자가 사용하고 있는 버전과 서버의 버전이 다를 경우 Update_Chating을 실행하여
업데이트 실행

public void Monitor_div(int x, int y)
Main 폼 크기 결정

public void Notify_div(int x, int y)
알림 창 크기 결정

private void Main_Resize(object sender, EventArgs e)
Main 폼의 상태에 따라 트레이 아이콘이나 taskbar 표시 

private void notifyIcon_MouseClick(object sender, MouseEventArgs e)
트레이 아이콘 클릭시 Main폼 활성화

private void 설정ToolStripMenuItem_Click(object sender, EventArgs e)
설정 메뉴바

public void time_stop()
알림창이 나타나고 사라지는 시간 설정

public void Notification(string, string)
알림창 크기, 위치 및 표시 설정

public void Before_Message(Socket)
이전 메세지 불러오기